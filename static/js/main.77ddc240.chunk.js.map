{"version":3,"sources":["App.js","index.js"],"names":["arrowDown","icon","faArrowDown","arrowUp","faArrowUp","arrowPlay","faPlay","pause","faPause","refresh","faSyncAlt","beep","document","getElementById","App","props","state","breakCount","sessionCount","clockCount","currentTimer","isPlaying","handlePlay","clearInterval","loop","setState","setInterval","play","handleRefresh","currentTime","convertToTime","count","minutes","Math","floor","seconds","handleTypeChange","timerType","newCount","toLowerCase","undefined","this","breakProps","title","handleDecrease","handleIncrease","sessionProps","className","id","onClick","React","Component","TimerLengthControl","value","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77ddc240.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowDown, faArrowUp, faPlay, faPause, faSyncAlt  } from '@fortawesome/free-solid-svg-icons'\n\n/* ICONS */\n\nconst arrowDown = <FontAwesomeIcon icon={faArrowDown} />\nconst arrowUp = <FontAwesomeIcon icon={faArrowUp} />\nconst arrowPlay = <FontAwesomeIcon icon={faPlay} />\nconst pause = <FontAwesomeIcon icon={faPause} />\nconst refresh = <FontAwesomeIcon icon={faSyncAlt} />\n\n\n/* MAIN APP */\n\nconst beep = document.getElementById('beep');\n\nclass App extends React.Component {\n\n  state = {\n    breakCount: 5,\n    sessionCount: 25,\n    clockCount: 25 *60,\n    currentTimer: 'Session',\n    isPlaying: false\n  }\n\n  constructor(props) {\n    super(props);\n    this.loop = undefined;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n  \n  handlePlay = () => {\n    const { isPlaying } = this.state;\n    \n    if (isPlaying) {\n      clearInterval(this.loop);\n      this.setState({\n        isPlaying: false\n      });\n    } else {\n      this.setState({\n        isPlaying: true\n      })\n      this.loop = setInterval(() => {\n        const { clockCount, currentTimer, breakCount, sessionCount} = this.state;\n        if (clockCount === 0) {\n          this.setState({\n            currentTimer: (currentTimer === 'Session') ? 'Break': 'Session',\n            clockCount: (currentTimer === 'Session') ? (breakCount * 60): (sessionCount * 60) \n          });\n          beep.play();\n        } else {\n          this.setState({\n            clockCount: clockCount - 1\n          });\n        }\n      }, 1000)\n    }\n  }\n\n  handleRefresh = () => {\n    this.setState({\n    breakCount: 5,\n    sessionCount: 25,\n    clockCount: 25 * 60,\n    currentTimer: 'Session',\n    isPlaying: false\n    });\n\n    clearInterval(this.loop);\n\n    beep.pause();\n    beep.currentTime = 0;\n\n  }\n\n  convertToTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n\n    minutes = minutes < 10 ? '0' + minutes: minutes\n    seconds = seconds < 10 ? '0' + seconds: seconds;\n\n    return `${minutes}:${seconds}`;\n  }\n\n  handleTypeChange = (count, timerType) => {\n    const { breakCount, sessionCount, currentTimer, isPlaying, clockCount} = this.state;\n\n    let newCount;\n\n    if (timerType === 'session') {\n      newCount = sessionCount + count;\n    } else {\n      newCount = breakCount + count;\n    }\n\n    if (newCount > 0 && newCount < 61 && !isPlaying) {\n      \n        this.setState({\n          [`${timerType}Count`]: newCount,\n          clockCount: (currentTimer.toLowerCase() === timerType) ? newCount * 60 : clockCount\n        });\n      \n    }\n\n  }\n\n  /* handleBreakDecrease = () => {\n    const { breakCount, isPlaying, currentTimer } = this.state;\n\n    if (breakCount > 1) {\n      \n      if (!isPlaying && currentTimer === 'Break') {\n        this.setState({\n          breakCount: breakCount - 1,\n          clockCount: (breakCount - 1) * 60\n        });\n      } else {\n        this.setState({\n          breakCount: breakCount - 1\n        });\n      }\n    }\n  }\n\n  handleBreakIncrease = () => {\n    const { breakCount, isPlaying, currentTimer } = this.state;\n\n    if (breakCount < 60) {\n\n      if (!isPlaying && currentTimer === 'Break') {\n        this.setState({\n          breakCount: breakCount + 1,\n          clockCount: (breakCount + 1) * 60\n        });\n      } else {\n        this.setState({\n          breakCount: breakCount + 1\n        });\n      }\n    }\n  }\n\n  handleSessionDecrease = () => {\n    const { sessionCount, isPlaying, currentTimer } = this.state;\n\n    if (sessionCount > 1) {\n\n      if (!isPlaying && currentTimer === 'Session') {\n        this.setState({\n          sessionCount: sessionCount - 1,\n          clockCount: (sessionCount - 1) * 60\n        });\n      } else {\n        this.setState({\n          sessionCount: sessionCount - 1\n        });\n      }\n    } \n  }\n\n  handleSessionIncrease = () => {\n    const { sessionCount, isPlaying, currentTimer } = this.state;\n\n    if (sessionCount < 60) {\n      if (!isPlaying && currentTimer === 'Session') {\n        this.setState({\n          sessionCount: sessionCount + 1,\n          clockCount: (sessionCount + 1) * 60\n        });\n      } else {\n        this.setState({\n          sessionCount: sessionCount + 1\n        });\n      }\n    }\n  } */\n\n\n  render() {\n\n    const { breakCount,\n            sessionCount,\n            clockCount,\n            currentTimer,\n            isPlaying\n      \n          } = this.state;\n\n    const breakProps = {\n      title: 'Break',\n      count: breakCount,\n      handleDecrease: () => this.handleTypeChange(-1, 'break'),\n      handleIncrease: () => this.handleTypeChange(1, 'break')\n    }\n\n    const sessionProps = {\n      title: 'Session',\n      count: sessionCount,\n      handleDecrease: () => this.handleTypeChange(-1, 'session'),\n      handleIncrease: () => this.handleTypeChange(1, 'session')\n    }\n\n    return (\n      <div className=\"wrapper\">\n      <div className=\"title-container\">\n        <h2 className=\"title\">POMODORO TIMER</h2>\n      </div>\n      <div className=\"time-length-control\">\n          <TimerLengthControl {...breakProps} />\n          <TimerLengthControl {...sessionProps} />\n      </div>\n      \n      <div className=\"timer\">\n        <h3 className=\"timer-title\" id=\"timer-label\">{currentTimer}</h3>\n        <span className=\"clock\" id=\"time-left\">{this.convertToTime(clockCount)}</span>\n      </div>\n      <div className=\"timer-controls\">\n        <div className=\"control\">\n          <button id=\"start_stop\" className=\"btn2\" onClick={this.handlePlay}>\n            {isPlaying ? pause: arrowPlay}\n          </button>\n        </div>\n        <div className=\"control\">\n          <button id=\"reset\" className=\"btn2\" onClick={this.handleRefresh}>\n            {refresh}\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\n/* COMPONENTS */\n\nconst TimerLengthControl = (props) => {\n\n  const id = props.title.toLowerCase();\n\n  return (\n    <div className=\"length-control\">\n      <h4 className=\"subtitle\" id={`${id}-label`}>{props.title} Length</h4>\n      <button className=\"btn-length\" id={`${id}-decrement`} value='-' onClick={props.handleDecrease}>\n      {arrowDown}\n      </button>\n      <span className=\"count\" id={`${id}-length`}>{props.count}</span>\n      <button className=\"btn-length\" id={`${id}-increment`} value='+' onClick={props.handleIncrease}>\n      {arrowUp}\n      </button>\n    </div>\n    \n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}